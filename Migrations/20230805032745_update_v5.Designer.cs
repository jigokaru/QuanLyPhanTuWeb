// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyPhanTuWeb.Models;

#nullable disable

namespace QuanLyPhanTuWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230805032745_update_v5")]
    partial class update_v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.Chuas", b =>
                {
                    b.Property<int?>("chuaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("chuaId"));

                    b.Property<DateTime?>("capNhap")
                        .HasColumnType("datetime2");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ngayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenChua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("chuaId");

                    b.ToTable("Chuas");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.DaoTrangs", b =>
                {
                    b.Property<int>("daoTrangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("daoTrangId"));

                    b.Property<bool>("daKetThuc")
                        .HasColumnType("bit");

                    b.Property<string>("noiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noiToChuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("phatTuId")
                        .HasColumnType("int");

                    b.Property<int?>("soThanhVienThamGia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("thoiGianToChuc")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("daoTrangId");

                    b.HasIndex("phatTuId");

                    b.ToTable("DaoTrangs");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.DonDangKys", b =>
                {
                    b.Property<int>("donDangkyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("donDangkyId"));

                    b.Property<int?>("daoTrangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayGuiDon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayXuLy")
                        .HasColumnType("datetime2");

                    b.Property<int>("nguoiXuLy")
                        .HasColumnType("int");

                    b.Property<int?>("phatTuId")
                        .HasColumnType("int");

                    b.Property<bool?>("trangThaiDon")
                        .HasColumnType("bit");

                    b.HasKey("donDangkyId");

                    b.HasIndex("daoTrangId");

                    b.HasIndex("phatTuId");

                    b.ToTable("DonDangKys");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.KieuThanhViens", b =>
                {
                    b.Property<int?>("kieuThanhVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("kieuThanhVienId"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenKieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kieuThanhVienId");

                    b.ToTable("KieuThanhViens");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.PhanTu", b =>
                {
                    b.Property<int?>("phatTuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("phatTuId"));

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("anhChup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("chuaId")
                        .HasColumnType("int");

                    b.Property<bool?>("daHoanTuc")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("kieuThanhVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ngayCapNhap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ngayHoanTuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ngayXuatGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phapDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("soDienThoai")
                        .HasColumnType("int");

                    b.Property<string>("ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenDem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("phatTuId");

                    b.HasIndex("chuaId");

                    b.HasIndex("kieuThanhVienId");

                    b.ToTable("PhanTu");

                    b.HasData(
                        new
                        {
                            phatTuId = 21,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 22,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 23,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 24,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 25,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 26,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 27,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 28,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 29,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 30,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 31,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 32,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 33,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 34,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 35,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 36,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 37,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 38,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        },
                        new
                        {
                            phatTuId = 39,
                            Role = "",
                            email = "",
                            isActive = true,
                            password = ""
                        });
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.PhatTuDaoTrangs", b =>
                {
                    b.Property<int>("phatTuDaoTrangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("phatTuDaoTrangId"));

                    b.Property<bool>("daThamGia")
                        .HasColumnType("bit");

                    b.Property<int?>("daoTrangId")
                        .HasColumnType("int");

                    b.Property<string>("lyDoKhongThamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("phatTuId")
                        .HasColumnType("int");

                    b.HasKey("phatTuDaoTrangId");

                    b.HasIndex("daoTrangId");

                    b.HasIndex("phatTuId");

                    b.ToTable("PhatTuDaoTrangs");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.Token", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<bool?>("expired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("expiresAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("phatTuId")
                        .HasColumnType("int");

                    b.Property<bool?>("revoked")
                        .HasColumnType("bit");

                    b.Property<string>("stoken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("phatTuId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.TokenResetPassword", b =>
                {
                    b.Property<int?>("PasswordResetTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PasswordResetTokenId"));

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("emailToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("phatTuId")
                        .HasColumnType("int");

                    b.HasKey("PasswordResetTokenId");

                    b.HasIndex("phatTuId");

                    b.ToTable("TokenResetPassword");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.DaoTrangs", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.PhanTu", "PhatTu")
                        .WithMany("DaoTrang")
                        .HasForeignKey("phatTuId");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.DonDangKys", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.DaoTrangs", "daoTrang")
                        .WithMany()
                        .HasForeignKey("daoTrangId");

                    b.HasOne("QuanLyPhanTuWeb.Models.PhanTu", "phatTu")
                        .WithMany()
                        .HasForeignKey("phatTuId");

                    b.Navigation("daoTrang");

                    b.Navigation("phatTu");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.PhanTu", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.Chuas", "chua")
                        .WithMany()
                        .HasForeignKey("chuaId");

                    b.HasOne("QuanLyPhanTuWeb.Models.KieuThanhViens", "kieuThanhVien")
                        .WithMany()
                        .HasForeignKey("kieuThanhVienId");

                    b.Navigation("chua");

                    b.Navigation("kieuThanhVien");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.PhatTuDaoTrangs", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.DaoTrangs", "daoTrang")
                        .WithMany()
                        .HasForeignKey("daoTrangId");

                    b.HasOne("QuanLyPhanTuWeb.Models.PhanTu", "phatTu")
                        .WithMany()
                        .HasForeignKey("phatTuId");

                    b.Navigation("daoTrang");

                    b.Navigation("phatTu");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.Token", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.PhanTu", "phatTu")
                        .WithMany()
                        .HasForeignKey("phatTuId");

                    b.Navigation("phatTu");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.TokenResetPassword", b =>
                {
                    b.HasOne("QuanLyPhanTuWeb.Models.PhanTu", "PhatTu")
                        .WithMany()
                        .HasForeignKey("phatTuId");

                    b.Navigation("PhatTu");
                });

            modelBuilder.Entity("QuanLyPhanTuWeb.Models.PhanTu", b =>
                {
                    b.Navigation("DaoTrang");
                });
#pragma warning restore 612, 618
        }
    }
}
